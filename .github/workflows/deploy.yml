name: Deploy Laravel Inertia React

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none
          
      - name: Install Composer Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
          
      - name: Install NPM Dependencies
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: npm install
          
      - name: Build Assets
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: |
          npm run build
          
      - name: Create build artifact
        run: |
          tar -czf build.tar.gz \
            ./vendor \
            ./public \
            ./storage \
            ./bootstrap \
            ./config \
            ./resources \
            ./routes \
            ./app \
            ./database \
            ./artisan \
            ./composer.json \
            ./composer.lock \
            ./package.json \
            ./package-lock.json \
            ./vite.config.js \
            ./tailwind.config.js \
            ./postcss.config.js
            
      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build.tar.gz"
          target: "${{ secrets.DEPLOY_PATH }}"
          
      - name: Execute deployment commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.DEPLOY_PATH }}
            tar -xzf build.tar.gz
            rm build.tar.gz
            composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
            php artisan storage:link
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            chmod -R 775 storage bootstrap/cache
            chown -R www-data:www-data .
            sudo systemctl restart php8.3-fpm